# Generated by Django 2.1.3 on 2019-01-07 08:08

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApiStep',
            fields=[
                ('api_id', models.AutoField(primary_key=True, serialize=False)),
                ('api_name', models.CharField(max_length=64, verbose_name='接口名称')),
                ('url', models.CharField(max_length=256, verbose_name='接口URL地址')),
                ('method', models.CharField(max_length=8, verbose_name='请求方式')),
                ('data_type', models.CharField(max_length=8, verbose_name='数据类型')),
                ('is_sign', models.IntegerField(verbose_name='是否签名')),
                ('api_desc', models.CharField(max_length=256, verbose_name='接口描述')),
                ('request_header_param', models.TextField(verbose_name='请求头信息')),
                ('request_body_param', models.TextField(verbose_name='请求体内容信息')),
                ('response_header_param', models.TextField(verbose_name='返回头信息')),
                ('response_body_param', models.TextField(verbose_name='返回体内容信息')),
            ],
        ),
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('env_id', models.AutoField(primary_key=True, serialize=False)),
                ('evn_name', models.CharField(max_length=64, verbose_name='测试环境名称')),
                ('evn_desc', models.CharField(max_length=128, verbose_name='测试环境描述')),
                ('url', models.CharField(max_length=256, verbose_name='项目URL地址')),
                ('private_key', models.CharField(max_length=64, verbose_name='签名值')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('prj_id', models.AutoField(primary_key=True, serialize=False)),
                ('prj_name', models.CharField(max_length=64, verbose_name='项目名称')),
                ('prj_desc', models.CharField(max_length=256, verbose_name='项目描述')),
                ('testers', models.CharField(max_length=256, verbose_name='测试负责人')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '项目管理',
                'verbose_name_plural': '项目管理',
            },
        ),
        migrations.CreateModel(
            name='Sign',
            fields=[
                ('sign_id', models.AutoField(primary_key=True, serialize=False)),
                ('sign_name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('case_id', models.AutoField(primary_key=True, serialize=False)),
                ('case_name', models.CharField(max_length=64, verbose_name='用例名称')),
                ('case_desc', models.CharField(max_length=256, verbose_name='用例描述')),
                ('content', models.TextField(verbose_name='用例内容')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ApiTest.Project')),
            ],
        ),
        migrations.CreateModel(
            name='TestPlan',
            fields=[
                ('plan_id', models.AutoField(primary_key=True, serialize=False)),
                ('plan_name', models.CharField(max_length=64, verbose_name='测试计划名称')),
                ('plan_desc', models.CharField(max_length=256, verbose_name='测试计划描述')),
                ('content', models.TextField()),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ApiTest.Environment')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ApiTest.Project')),
            ],
        ),
        migrations.CreateModel(
            name='TestReport',
            fields=[
                ('report_id', models.AutoField(primary_key=True, serialize=False)),
                ('report_name', models.CharField(max_length=256, verbose_name='测试报告名称')),
                ('content', models.TextField()),
                ('case_num', models.IntegerField(null=True)),
                ('pass_num', models.IntegerField(null=True)),
                ('fail_num', models.IntegerField(null=True)),
                ('error_num', models.IntegerField(null=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ApiTest.TestPlan')),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('telephone', models.CharField(max_length=11, null=True, unique=True)),
                ('avatar', models.FileField(default='/avatars/default.png', upload_to='avatars/')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='sign',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ApiTest.Sign'),
        ),
        migrations.AddField(
            model_name='environment',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ApiTest.Project'),
        ),
        migrations.AddField(
            model_name='apistep',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ApiTest.Project'),
        ),
    ]
